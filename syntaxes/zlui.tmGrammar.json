{
    "scopeName": "source.ui",
    "name": "zlUI",
    "patterns": [
        { "include": "#global_function" }, 
        { "include": "#comment" },
        { "include": "#object" }
    ],
    "repository": {
        "object": {
            "patterns": [
                { 
                    "match": "Object|Clone",
                    "name": "keyword.type"
                },
                { 
                    "match": "\\b(Param|TrackGroup|Track|PlayTrack)\\b",
                    "name": "keyword.type"
                },
                { 
                    "match": "\\b(if|ifnot)\\b",
                    "name": "keyword.control.if"
                },
                { "include": "#object_type"},
                { "include": "#parameter_win"},
                { "include": "#parameter"},
                { "include": "#paren-object" },
                { "include": "#paren-expression" },                
                { "include": "#comment" }
            ]
        },
        "object_type": {
            "patterns": [
                {
                    "match": "\\b(Win|Panel|Image|Button|Check|Combo|Edit|Slider|ImageText)\\b",
                    "name": "variable.object_type"
                }
            ]
        },
        "global_function":{
            "patterns":[
                {
                    "match": "\\b(Font|include|DefaultBorderWidth|DefaultScreenSize|DefaultPanelColor|LoadPackImage|DefaultComboMenu|DefaultComboItem|MergeFont|CreateFont)\\b",
                    "name": "variable.global_function"
                }
            ]
        },
        "parameter_win":{
            "patterns":[
                {
                    "match":"\\b(Name|RectWH|Top|Y|Left|X|Width|W|Height|H|Align|Visible|Notify|Drag|Autosize|AutoHeight|Padding|Anchor|Dock|Offset|Clip|Arrange|Hint|Mergin)\\b",
                    "name":"constant.numeric.win"
                },
                {
                    "match":"\\b(Image|Color)\\b",
                    "name":"constant.numeric.image"
                },
                {
                    "match":"\\b(DrawClient|DrawBorder|DrawWidth|BorderColor|HoverColor|Rounding|RoundingCorner|Text|TextAlignW|TextAlignH|TextColor|TextColorHover|Font|Board|Multiline|TextAnchor|TextOffset|BorderWidth)\\b",
                    "name":"constant.numeric.panel"
                },
                {
                    "match":"\\b(Password|MaxLength)\\b",
                    "name":"constant.numeric.edit"
                },
                {
                    "match":"\\b(BoardDown|Board|BoardUp|BoardHover|Color|ColorDown|ColorHover|ColorDisable|TextColor|TextColorDown|TextColorUp|Image|ImageDown|ImageHover|DrawButton)\\b",
                    "name":"constant.numeric.button"
                },
                {
                    "match":"\\b(DrawCheck|CheckText)\\b",
                    "name":"constant.numeric.check"
                },
                {
                    "match":"\\b(ComboItems|ComboValue)\\b",
                    "name":"constant.numeric.combo"
                },
                {
                    "match":"\\b(Direction|ItemMode|MouseWheelSpeed)\\b",
                    "name":"constant.numeric.slider"
                },
                {
                    "match":"\\b(ImageList|ImageW|ImageH|Text|Ascii|TextAlignW|TextAlignH|FontSpace)\\b",
                    "name":"constant.numeric.imagetext"
                },
                {
                    "match": "\\b(SetPos|SetRect|SetWidth|SetHeight|Move|MoveLerp|MoveBezier|SetX|MoveX|MoveXLerp|SetY|MoveY|MoveYLerp|SetScale|Scale|ScaleLerp|Image|SetAlpha|Alpha|AlphaLerp|Hide|Show|FlipW|FlipH|SetRotate|Rotate|RotateLerp|SetColor|Color|ColorLerp|Width|WidthLerp|Height|HeightLerp|StopAni|PlayAni|AniSpeed|AniStartEnd|PlaySound|SoundFade|Volume|SetImageClip|ImageClip|ImageClipLerp|PlayTrack|StopTrack|Enable|Disable|Text)\\b",
                    "name": "constant.numeric.track"
                }
            ]
        },
        "parameter":{
            "patterns":[
                {
                    "match": "\\b(RGB|RGBA)\\b",
                    "name": "keyword.control.color"
                },
                {
                    "match": "\\b(true|false|yes|no)\\b",
                    "name": "keyword.control.boolean"
                },
                {
                    "match": "\\b(none|left|top|right|down|center|centerW|centerH|centerTop|centerDown|centerLeft|centerRight|rightTop|rightDown|leftTop|leftDown|parentWidth|parentHeight|textWidth|textHeight|textSize)\\b",
                    "name": "keyword.control.align"
                },
                {
                    "match": "\\b(width|height|all)\\b",
                    "name": "keyword.control.autosize"
                },
                {
                    "match": "\\b(horizon|vertical|both)\\b",
                    "name": "keyword.control.slidertype"
                },
                {
                    "match": "\\b(none|topLeft|topRight|downLeft|downRight|top|down|left|right|all)\\b",
                    "name": "keyword.control.corner"
                },
                {
                    "match": "\\b(x|y|xy|all)\\b",
                    "name": "keyword.control.anchor"
                },
                {
                    "match": "\\b(left|top|right|down|bottom|all)\\b",
                    "name": "keyword.control.dock"
                },
                {
                    "match": "\\b(item|content|horizon|vertical)\\b",
                    "name": "keyword.control.arrange"
                },
                {
                    "match": "\\\\u([\\d\\w]{4})|\\\\s|\\\\n",
                    "name": "support.class"
                }

            ]
        },
        "comment":{
            "patterns":[
                {
                    "begin": "//|#",
                    "end":"$",
                    "name": "comment.line"
                },
                {
                    "begin":"/\\*",
                    "end":"\\*/",
                    "beginCaptures": {
                        "0": { "name": "punctuation.paren.open" }
                    },
                    "endCaptures": {
                        "0": { "name": "punctuation.paren.close" }
                    },
                    "name": "comment.block"
                }
            ]
        },
        "paren-object": {
            "begin": "\\{",
            "end": "\\}",
            "beginCaptures": {
                "0": { "name": "punctuation.paren.open" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.paren.close" }
            },
            "name": "object.group",

            "patterns": [
                { "include": "#object" },
                { "include": "#function"}
            ]
        },
        "paren-expression": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": { "name": "punctuation.paren.open" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.paren.close" }
            },
            "name": "expression.group",
            "patterns": [{ "include": "#expression" }]
        }        
    }    
}